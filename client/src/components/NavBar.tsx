import anime from "animejs";
import axios from "axios";
import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { Link } from "react-router-dom";
import "../css/NavBar.css";
import { useRouter } from "../helpers/useRouter";
import { setGlobalModal } from "../redux/global/action";
import {
  expandNotificationMessageAction,
  setNotificationMessage,
} from "../redux/notification/action";
import { IRootState } from "../redux/store";
import { CompanyName } from "./CompanyName";
import { LogoutIcon, NotificationAlertIcon, NotificationIcon } from "./IconsOnly";
import MenuButton from "./MenuButton";

function NavBar() {
  const router = useRouter();
  const splitRoute = router.pathname;
  const [menuIsOpen, setMenuIsOpen] = useState(false);
  const [notificationIds, setNotificationIds] = useState<number[]>([]);

  const login = useSelector((state: IRootState) => state.login);
  const role = login.role;

  const menuItem =
    role === "ADMIN"
      ? [
          { display: "Latest Locations", link: "/latest-locations" },
          { display: "Incident Records", link: "/alert-data-page" },
          { display: "Pulse Message", link: "/pulse-message" },
          { display: "Manage User", link: "/manage-user" },
          { display: "Manage Device", link: "/manage-device" },
          { display: "Change Password", link: "/change-password" },
        ]
      : [
          { display: "Latest Locations", link: "/latest-locations" },
          { display: "Incident Records", link: "/alert-data-page" },
          { display: "Pulse Message", link: "/pulse-message" },
          { display: "View User", link: "/manage-user" },
          { display: "Change Password", link: "/change-password" },
        ];

  const closePathA =
    "M28 17.5 C29.933 17.5 31.5 15.933 31.5 14C31.5 12.067 29.933 10.5 28 10.5C26.067 10.5 24.5 12.067 24.5 14C24.5 15.933 26.067 17.5 28 17.5Z M28 31.5C29.933 31.5 31.5 29.933 31.5 28C31.5 26.067 29.933 24.5 28 24.5C26.067 24.5 24.5 26.067 24.5 28C24.5 29.933 26.067 31.5 28 31.5Z M28 45.5C29.933 45.5 31.5 43.933 31.5 42C31.5 40.067 29.933 38.5 28 38.5C26.067 38.5 24.5 40.067 24.5 42C24.5 43.933 26.067 45.5 28 45.5Z";

  const openPathA =
    "M0.762563 0.762563C1.44598 0.0791457 2.55402 0.0791457 3.23744 0.762563L26.5 24.0251L49.7626 0.762563C50.446 0.0791457 51.554 0.0791457 52.2374 0.762563C52.9209 1.44598 52.9209 2.55402 52.2374 3.23744L28.9749 26.5L52.2374 49.7626C52.9209 50.446 52.9209 51.554 52.2374 52.2374C51.554 52.9209 50.446 52.9209 49.7626 52.2374L26.5 28.9749L3.23744 52.2374C2.55402 52.9209 1.44598 52.9209 0.762563 52.2374C0.0791457 51.554 0.0791457 50.446 0.762563 49.7626L24.0251 26.5L0.762563 3.23744C0.0791457 2.55402 0.0791457 1.44598 0.762563 0.762563Z";

  const handleClick = () => {
    setMenuIsOpen(false);
    dispatch(expandNotificationMessageAction(false));
  };
  useEffect(() => {
    const timeline = anime.timeline({
      duration: 300,
      easing: "easeOutExpo",
    });
    timeline.add({
      targets: ".menuPointA",
      d: [{ value: menuIsOpen ? openPathA : closePathA }],
    });
  }, [menuIsOpen]);

  const handleClick2 = () => {
    if (menuIsOpen) {
      setMenuIsOpen(false);
      const timeline = anime.timeline({
        duration: 300,
        easing: "easeOutExpo",
      });
      timeline.add({
        targets: ".menuPointA",
        d: [{ value: closePathA }],
      });
    } else {
      const timeline = anime.timeline({
        duration: 300,
        easing: "easeOutExpo",
      });
      timeline.add({
        targets: ".menuPointA",
        d: [{ value: openPathA }],
      });
      setMenuIsOpen(true);
    }
  };

  const dispatch = useDispatch();
  const notification = useSelector((state: IRootState) => state.notification.notification);
  const showNotification = notification.showNotification;
  const expandNotification = notification.expandNotification;

  const reallyNoMessage = notification.message.length < 1;

  useEffect(() => {
    const fetchLowBatteryNotification = async () => {
      try {
        const url = new URL(
          `${process.env.REACT_APP_API_SERVER}${process.env.REACT_APP_API_VERSION}/alert-data/battery`
        );
        url.searchParams.set("min", "3.6");
        const res = await axios.get(url.toString());
        const result = res.data;
        dispatch(setNotificationMessage(result.data));
      } catch (error) {
        console.error(error);
      }
    };
    fetchLowBatteryNotification();
  }, [dispatch]);

  useEffect(() => {
    const tempArr = notification.message.map((i) => i.id);
    setNotificationIds(tempArr);
  }, [expandNotification]);

  // useEffect(() => {
  //   const notedWithThanks = async () => {
  //     try {
  //       await axios.put(`alert-data/battery`, {
  //         notificationIds,
  //       });
  //     } catch (e) {
  //       console.error(e.message);
  //     }
  //   };
  //   notedWithThanks();
  // }, [notificationIds]);

  return (
    <div className="topNavContainer">
      {splitRoute !== "/login" && (
        <>
          <div className="topNavContentContainer">
            <div className="topNavItemContainer">
              <CompanyName />
              <div className="flex-center">
                <div
                  className="flex-center menuButtonContainer"
                  style={{ marginRight: "24px", position: "relative" }}
                  onClick={() => {
                    dispatch(expandNotificationMessageAction(!expandNotification));
                  }}
                >
                  {showNotification ? <NotificationAlertIcon /> : <NotificationIcon />}
                  {expandNotification && (
                    <div className="notificationModal">
                      <h4 style={{ marginBottom: "24px" }}>Low battery alert</h4>
                      {reallyNoMessage ? (
                        <div>{"No message yet"}</div>
                      ) : (
                        notification.message.map((message) => {
                          return (
                            <div key={`message-${message.id}`} className="notificationContainer">
                              <div style={{ textAlign: "left" }}>
                                {message.deviceEui}{" "}
                                <span style={{ color: "red" }}>({message.deviceName})</span>
                                <br />
                                {new Date(message.date).toLocaleString("en-CA")}
                              </div>
                            </div>
                          );
                        })
                      )}
                    </div>
                  )}
                </div>
                <div className="flex-center menuButtonContainer">
                  <MenuButton isOpen={menuIsOpen} handleClick={() => setMenuIsOpen(!menuIsOpen)} />
                </div>
              </div>
            </div>

            <div
              className="rightMenu"
              style={{
                display: "flex",
                flexDirection: "column",
                justifyContent: "space-between",
                alignItems: "center",
                right: menuIsOpen ? 0 : "-150%",
              }}
            >
              <section className="flex-center menuItemContainer">
                {menuItem.map((item, idx) => {
                  return (
                    <Link
                      key={"menuItem" + idx}
                      to={item.link}
                      style={{
                        width: "100%",
                        color: "none",
                        textDecoration: "none",
                        height: "80px",
                      }}
                    >
                      <div className="flex-center menuItem">{item.display}</div>
                    </Link>
                  );
                })}
                <div
                  className="flex-center menuItem full-width"
                  onClick={() => {
                    dispatch(
                      setGlobalModal({
                        isOpen: true,
                        content: "Confirm logout?",
                        identifier: "CONFIRM_LOGOUT",
                      })
                    );
                  }}
                >
                  <div className="mx-3">
                    <div className="flex-center secondaryText" style={{ fontSize: "1.7vmin" }}>
                      Logout
                    </div>
                  </div>
                  <LogoutIcon />
                </div>
              </section>
              <section className="full-width flex-row-end m-4">
                <div className="mx-4">
                  <svg
                    width="269"
                    height="18"
                    viewBox="0 0 269 18"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M1.086 7.036C1.32867 6.52267 1.71133 6.098 2.234 5.762C2.766 5.41667 3.396 5.244 4.124 5.244C4.81467 5.244 5.43533 5.40733 5.986 5.734C6.546 6.05133 6.98 6.50867 7.288 7.106C7.60533 7.694 7.764 8.38 7.764 9.164C7.764 9.948 7.60533 10.6387 7.288 11.236C6.98 11.8333 6.546 12.2953 5.986 12.622C5.43533 12.9487 4.81467 13.112 4.124 13.112C3.40533 13.112 2.78 12.944 2.248 12.608C1.716 12.2627 1.32867 11.8333 1.086 11.32V16.612H0.12V5.356H1.086V7.036ZM6.77 9.164C6.77 8.52933 6.644 7.98333 6.392 7.526C6.14933 7.05933 5.81333 6.70467 5.384 6.462C4.95467 6.21933 4.46933 6.098 3.928 6.098C3.40533 6.098 2.92467 6.224 2.486 6.476C2.05667 6.728 1.716 7.08733 1.464 7.554C1.212 8.02067 1.086 8.562 1.086 9.178C1.086 9.794 1.212 10.3353 1.464 10.802C1.716 11.2687 2.05667 11.628 2.486 11.88C2.92467 12.132 3.40533 12.258 3.928 12.258C4.46933 12.258 4.95467 12.1367 5.384 11.894C5.81333 11.642 6.14933 11.2827 6.392 10.816C6.644 10.34 6.77 9.78933 6.77 9.164ZM12.9133 13.112C12.1946 13.112 11.5459 12.9533 10.9673 12.636C10.3979 12.3093 9.94527 11.852 9.60927 11.264C9.2826 10.6667 9.11927 9.97133 9.11927 9.178C9.11927 8.38467 9.28727 7.694 9.62327 7.106C9.95927 6.50867 10.4166 6.05133 10.9953 5.734C11.5739 5.40733 12.2226 5.244 12.9413 5.244C13.6599 5.244 14.3086 5.40733 14.8873 5.734C15.4753 6.05133 15.9326 6.50867 16.2593 7.106C16.5953 7.694 16.7633 8.38467 16.7633 9.178C16.7633 9.962 16.5953 10.6527 16.2593 11.25C15.9233 11.8473 15.4613 12.3093 14.8733 12.636C14.2853 12.9533 13.6319 13.112 12.9133 13.112ZM12.9133 12.258C13.4173 12.258 13.8839 12.146 14.3133 11.922C14.7426 11.6887 15.0879 11.3433 15.3493 10.886C15.6199 10.4193 15.7553 9.85 15.7553 9.178C15.7553 8.506 15.6246 7.94133 15.3633 7.484C15.1019 7.01733 14.7566 6.672 14.3273 6.448C13.8979 6.21467 13.4313 6.098 12.9273 6.098C12.4233 6.098 11.9566 6.21467 11.5273 6.448C11.0979 6.672 10.7526 7.01733 10.4913 7.484C10.2393 7.94133 10.1133 8.506 10.1133 9.178C10.1133 9.85 10.2393 10.4193 10.4913 10.886C10.7526 11.3433 11.0933 11.6887 11.5133 11.922C11.9426 12.146 12.4093 12.258 12.9133 12.258ZM28.6297 5.356L26.2357 13H25.2557L23.1417 6.588L21.0277 13H20.0337L17.6397 5.356H18.6337L20.5377 12.006L22.6797 5.356H23.6597L25.7737 12.02L27.6637 5.356H28.6297ZM36.8817 8.786C36.8817 9.122 36.8724 9.37867 36.8537 9.556H30.5117C30.5397 10.1347 30.6797 10.6293 30.9317 11.04C31.1837 11.4507 31.515 11.7633 31.9257 11.978C32.3364 12.1833 32.7844 12.286 33.2697 12.286C33.9044 12.286 34.4364 12.132 34.8657 11.824C35.3044 11.516 35.5937 11.1007 35.7337 10.578H36.7697C36.583 11.3247 36.1817 11.936 35.5657 12.412C34.959 12.8787 34.1937 13.112 33.2697 13.112C32.551 13.112 31.907 12.9533 31.3377 12.636C30.7684 12.3093 30.3204 11.852 29.9937 11.264C29.6764 10.6667 29.5177 9.97133 29.5177 9.178C29.5177 8.38467 29.6764 7.68933 29.9937 7.092C30.311 6.49467 30.7544 6.03733 31.3237 5.72C31.893 5.40267 32.5417 5.244 33.2697 5.244C33.9977 5.244 34.6324 5.40267 35.1737 5.72C35.7244 6.03733 36.1444 6.46667 36.4337 7.008C36.7324 7.54 36.8817 8.13267 36.8817 8.786ZM35.8877 8.758C35.897 8.18867 35.7804 7.70333 35.5377 7.302C35.3044 6.90067 34.9824 6.59733 34.5717 6.392C34.161 6.18667 33.713 6.084 33.2277 6.084C32.4997 6.084 31.879 6.31733 31.3657 6.784C30.8524 7.25067 30.5677 7.90867 30.5117 8.758H35.8877ZM39.6547 6.714C39.8694 6.238 40.196 5.86933 40.6347 5.608C41.0827 5.34667 41.6287 5.216 42.2727 5.216V6.238H42.0067C41.2974 6.238 40.728 6.42933 40.2987 6.812C39.8694 7.19467 39.6547 7.834 39.6547 8.73V13H38.6747V5.356H39.6547V6.714ZM50.663 8.786C50.663 9.122 50.6536 9.37867 50.635 9.556H44.293C44.321 10.1347 44.461 10.6293 44.713 11.04C44.965 11.4507 45.2963 11.7633 45.707 11.978C46.1176 12.1833 46.5656 12.286 47.051 12.286C47.6856 12.286 48.2176 12.132 48.647 11.824C49.0856 11.516 49.375 11.1007 49.515 10.578H50.551C50.3643 11.3247 49.963 11.936 49.347 12.412C48.7403 12.8787 47.975 13.112 47.051 13.112C46.3323 13.112 45.6883 12.9533 45.119 12.636C44.5496 12.3093 44.1016 11.852 43.775 11.264C43.4576 10.6667 43.299 9.97133 43.299 9.178C43.299 8.38467 43.4576 7.68933 43.775 7.092C44.0923 6.49467 44.5356 6.03733 45.105 5.72C45.6743 5.40267 46.323 5.244 47.051 5.244C47.779 5.244 48.4136 5.40267 48.955 5.72C49.5056 6.03733 49.9256 6.46667 50.215 7.008C50.5136 7.54 50.663 8.13267 50.663 8.786ZM49.669 8.758C49.6783 8.18867 49.5616 7.70333 49.319 7.302C49.0856 6.90067 48.7636 6.59733 48.353 6.392C47.9423 6.18667 47.4943 6.084 47.009 6.084C46.281 6.084 45.6603 6.31733 45.147 6.784C44.6336 7.25067 44.349 7.90867 44.293 8.758H49.669ZM52.0079 9.164C52.0079 8.38 52.1666 7.694 52.4839 7.106C52.8013 6.50867 53.2353 6.05133 53.7859 5.734C54.3459 5.40733 54.9759 5.244 55.6759 5.244C56.3479 5.244 56.9546 5.40733 57.4959 5.734C58.0373 6.06067 58.4339 6.48533 58.6859 7.008V2.64H59.6659V13H58.6859V11.292C58.4526 11.824 58.0699 12.2627 57.5379 12.608C57.0059 12.944 56.3806 13.112 55.6619 13.112C54.9619 13.112 54.3319 12.9487 53.7719 12.622C53.2213 12.2953 52.7873 11.8333 52.4699 11.236C52.1619 10.6387 52.0079 9.948 52.0079 9.164ZM58.6859 9.178C58.6859 8.562 58.5599 8.02067 58.3079 7.554C58.0559 7.08733 57.7106 6.728 57.2719 6.476C56.8426 6.224 56.3666 6.098 55.8439 6.098C55.3026 6.098 54.8173 6.21933 54.3879 6.462C53.9586 6.70467 53.6179 7.05933 53.3659 7.526C53.1233 7.98333 53.0019 8.52933 53.0019 9.164C53.0019 9.78933 53.1233 10.34 53.3659 10.816C53.6179 11.2827 53.9586 11.642 54.3879 11.894C54.8173 12.1367 55.3026 12.258 55.8439 12.258C56.3666 12.258 56.8426 12.132 57.2719 11.88C57.7106 11.628 58.0559 11.2687 58.3079 10.802C58.5599 10.3353 58.6859 9.794 58.6859 9.178ZM66.711 7.05C66.963 6.518 67.3503 6.084 67.873 5.748C68.405 5.412 69.0303 5.244 69.749 5.244C70.449 5.244 71.0743 5.40733 71.625 5.734C72.1757 6.05133 72.605 6.50867 72.913 7.106C73.2303 7.694 73.389 8.38 73.389 9.164C73.389 9.948 73.2303 10.6387 72.913 11.236C72.605 11.8333 72.171 12.2953 71.611 12.622C71.0603 12.9487 70.4397 13.112 69.749 13.112C69.021 13.112 68.391 12.9487 67.859 12.622C67.3363 12.286 66.9537 11.852 66.711 11.32V13H65.745V2.64H66.711V7.05ZM72.395 9.164C72.395 8.52933 72.269 7.98333 72.017 7.526C71.7743 7.05933 71.4383 6.70467 71.009 6.462C70.5797 6.21933 70.0943 6.098 69.553 6.098C69.0303 6.098 68.5497 6.224 68.111 6.476C67.6817 6.728 67.341 7.08733 67.089 7.554C66.837 8.02067 66.711 8.562 66.711 9.178C66.711 9.794 66.837 10.3353 67.089 10.802C67.341 11.2687 67.6817 11.628 68.111 11.88C68.5497 12.132 69.0303 12.258 69.553 12.258C70.0943 12.258 70.5797 12.1367 71.009 11.894C71.4383 11.642 71.7743 11.2827 72.017 10.816C72.269 10.34 72.395 9.78933 72.395 9.164ZM81.4923 5.356L76.9563 16.598H75.9343L77.4183 12.958L74.2823 5.356H75.3603L77.9643 11.88L80.4843 5.356H81.4923Z"
                      fill="#eeeeee"
                    />
                    <path
                      d="M100.544 1.928V13H99.088V4.744L95.408 13H94.384L90.688 4.728V13H89.232V1.928H90.8L94.896 11.08L98.992 1.928H100.544ZM110.789 4.232V13H109.333V11.704C109.056 12.152 108.667 12.504 108.165 12.76C107.675 13.0053 107.131 13.128 106.533 13.128C105.851 13.128 105.237 12.9893 104.693 12.712C104.149 12.424 103.717 11.9973 103.397 11.432C103.088 10.8667 102.933 10.1787 102.933 9.368V4.232H104.373V9.176C104.373 10.04 104.592 10.7067 105.029 11.176C105.467 11.6347 106.064 11.864 106.821 11.864C107.6 11.864 108.213 11.624 108.661 11.144C109.109 10.664 109.333 9.96533 109.333 9.048V4.232H110.789ZM116.352 13.144C115.68 13.144 115.077 13.032 114.544 12.808C114.01 12.5733 113.589 12.2533 113.28 11.848C112.97 11.432 112.8 10.9573 112.768 10.424H114.272C114.314 10.8613 114.517 11.2187 114.88 11.496C115.253 11.7733 115.738 11.912 116.336 11.912C116.89 11.912 117.328 11.7893 117.648 11.544C117.968 11.2987 118.128 10.9893 118.128 10.616C118.128 10.232 117.957 9.94933 117.616 9.768C117.274 9.576 116.746 9.38933 116.032 9.208C115.381 9.03733 114.848 8.86667 114.432 8.696C114.026 8.51467 113.674 8.25333 113.376 7.912C113.088 7.56 112.944 7.10133 112.944 6.536C112.944 6.088 113.077 5.67733 113.344 5.304C113.61 4.93067 113.989 4.63733 114.48 4.424C114.97 4.2 115.53 4.088 116.16 4.088C117.13 4.088 117.914 4.33333 118.512 4.824C119.109 5.31467 119.429 5.98667 119.472 6.84H118.016C117.984 6.38133 117.797 6.01333 117.456 5.736C117.125 5.45867 116.677 5.32 116.112 5.32C115.589 5.32 115.173 5.432 114.864 5.656C114.554 5.88 114.4 6.17333 114.4 6.536C114.4 6.824 114.49 7.064 114.672 7.256C114.864 7.43733 115.098 7.58667 115.376 7.704C115.664 7.81067 116.058 7.93333 116.56 8.072C117.189 8.24267 117.701 8.41333 118.096 8.584C118.49 8.744 118.826 8.98933 119.104 9.32C119.392 9.65067 119.541 10.0827 119.552 10.616C119.552 11.096 119.418 11.528 119.152 11.912C118.885 12.296 118.506 12.6 118.016 12.824C117.536 13.0373 116.981 13.144 116.352 13.144ZM129.607 8.28C129.607 8.55733 129.591 8.85067 129.559 9.16H122.551C122.604 10.024 122.898 10.7013 123.431 11.192C123.975 11.672 124.631 11.912 125.399 11.912C126.028 11.912 126.551 11.768 126.967 11.48C127.394 11.1813 127.692 10.7867 127.863 10.296H129.431C129.196 11.1387 128.727 11.8267 128.023 12.36C127.319 12.8827 126.444 13.144 125.399 13.144C124.567 13.144 123.82 12.9573 123.159 12.584C122.508 12.2107 121.996 11.6827 121.623 11C121.25 10.3067 121.063 9.50667 121.063 8.6C121.063 7.69333 121.244 6.89867 121.607 6.216C121.97 5.53333 122.476 5.01067 123.127 4.648C123.788 4.27467 124.546 4.088 125.399 4.088C126.231 4.088 126.967 4.26933 127.607 4.632C128.247 4.99467 128.738 5.496 129.079 6.136C129.431 6.76533 129.607 7.48 129.607 8.28ZM128.103 7.976C128.103 7.42133 127.98 6.94667 127.735 6.552C127.49 6.14667 127.154 5.84267 126.727 5.64C126.311 5.42667 125.847 5.32 125.335 5.32C124.599 5.32 123.97 5.55467 123.447 6.024C122.935 6.49333 122.642 7.144 122.567 7.976H128.103ZM137.251 11.816H141.155V13H135.795V1.848H137.251V11.816ZM142.157 8.584C142.157 7.688 142.338 6.904 142.701 6.232C143.063 5.54933 143.559 5.02133 144.189 4.648C144.829 4.27467 145.538 4.088 146.317 4.088C147.085 4.088 147.751 4.25333 148.317 4.584C148.882 4.91467 149.303 5.33067 149.581 5.832V4.232H151.053V13H149.581V11.368C149.293 11.88 148.861 12.3067 148.285 12.648C147.719 12.9787 147.058 13.144 146.301 13.144C145.522 13.144 144.818 12.952 144.189 12.568C143.559 12.184 143.063 11.6453 142.701 10.952C142.338 10.2587 142.157 9.46933 142.157 8.584ZM149.581 8.6C149.581 7.93867 149.447 7.36267 149.181 6.872C148.914 6.38133 148.551 6.008 148.093 5.752C147.645 5.48533 147.149 5.352 146.605 5.352C146.061 5.352 145.565 5.48 145.117 5.736C144.669 5.992 144.311 6.36533 144.045 6.856C143.778 7.34667 143.645 7.92267 143.645 8.584C143.645 9.256 143.778 9.84267 144.045 10.344C144.311 10.8347 144.669 11.2133 145.117 11.48C145.565 11.736 146.061 11.864 146.605 11.864C147.149 11.864 147.645 11.736 148.093 11.48C148.551 11.2133 148.914 10.8347 149.181 10.344C149.447 9.84267 149.581 9.26133 149.581 8.6ZM154.969 5.864C155.268 5.34133 155.705 4.91467 156.281 4.584C156.857 4.25333 157.513 4.088 158.249 4.088C159.039 4.088 159.748 4.27467 160.377 4.648C161.007 5.02133 161.503 5.54933 161.865 6.232C162.228 6.904 162.409 7.688 162.409 8.584C162.409 9.46933 162.228 10.2587 161.865 10.952C161.503 11.6453 161.001 12.184 160.361 12.568C159.732 12.952 159.028 13.144 158.249 13.144C157.492 13.144 156.825 12.9787 156.249 12.648C155.684 12.3173 155.257 11.896 154.969 11.384V13H153.513V1.16H154.969V5.864ZM160.921 8.584C160.921 7.92267 160.788 7.34667 160.521 6.856C160.255 6.36533 159.892 5.992 159.433 5.736C158.985 5.48 158.489 5.352 157.945 5.352C157.412 5.352 156.916 5.48533 156.457 5.752C156.009 6.008 155.647 6.38667 155.369 6.888C155.103 7.37867 154.969 7.94933 154.969 8.6C154.969 9.26133 155.103 9.84267 155.369 10.344C155.647 10.8347 156.009 11.2133 156.457 11.48C156.916 11.736 157.412 11.864 157.945 11.864C158.489 11.864 158.985 11.736 159.433 11.48C159.892 11.2133 160.255 10.8347 160.521 10.344C160.788 9.84267 160.921 9.256 160.921 8.584ZM167.43 13.144C166.758 13.144 166.155 13.032 165.622 12.808C165.088 12.5733 164.667 12.2533 164.358 11.848C164.048 11.432 163.878 10.9573 163.846 10.424H165.35C165.392 10.8613 165.595 11.2187 165.958 11.496C166.331 11.7733 166.816 11.912 167.414 11.912C167.968 11.912 168.406 11.7893 168.726 11.544C169.046 11.2987 169.206 10.9893 169.206 10.616C169.206 10.232 169.035 9.94933 168.694 9.768C168.352 9.576 167.824 9.38933 167.11 9.208C166.459 9.03733 165.926 8.86667 165.51 8.696C165.104 8.51467 164.752 8.25333 164.454 7.912C164.166 7.56 164.022 7.10133 164.022 6.536C164.022 6.088 164.155 5.67733 164.422 5.304C164.688 4.93067 165.067 4.63733 165.558 4.424C166.048 4.2 166.608 4.088 167.238 4.088C168.208 4.088 168.992 4.33333 169.59 4.824C170.187 5.31467 170.507 5.98667 170.55 6.84H169.094C169.062 6.38133 168.875 6.01333 168.534 5.736C168.203 5.45867 167.755 5.32 167.19 5.32C166.667 5.32 166.251 5.432 165.942 5.656C165.632 5.88 165.478 6.17333 165.478 6.536C165.478 6.824 165.568 7.064 165.75 7.256C165.942 7.43733 166.176 7.58667 166.454 7.704C166.742 7.81067 167.136 7.93333 167.638 8.072C168.267 8.24267 168.779 8.41333 169.174 8.584C169.568 8.744 169.904 8.98933 170.182 9.32C170.47 9.65067 170.619 10.0827 170.63 10.616C170.63 11.096 170.496 11.528 170.23 11.912C169.963 12.296 169.584 12.6 169.094 12.824C168.614 13.0373 168.059 13.144 167.43 13.144ZM178.407 3.032V6.76H182.471V7.96H178.407V11.8H182.951V13H176.951V1.832H182.951V3.032H178.407ZM189.426 4.072C190.493 4.072 191.357 4.39733 192.018 5.048C192.679 5.688 193.01 6.616 193.01 7.832V13H191.57V8.04C191.57 7.16533 191.351 6.49867 190.914 6.04C190.477 5.57067 189.879 5.336 189.122 5.336C188.354 5.336 187.741 5.576 187.282 6.056C186.834 6.536 186.61 7.23467 186.61 8.152V13H185.154V4.232H186.61V5.48C186.898 5.032 187.287 4.68533 187.778 4.44C188.279 4.19467 188.829 4.072 189.426 4.072ZM199.004 4.088C199.762 4.088 200.423 4.25333 200.988 4.584C201.564 4.91467 201.991 5.33067 202.268 5.832V4.232H203.74V13.192C203.74 13.992 203.57 14.7013 203.228 15.32C202.887 15.9493 202.396 16.44 201.756 16.792C201.127 17.144 200.391 17.32 199.548 17.32C198.396 17.32 197.436 17.048 196.668 16.504C195.9 15.96 195.447 15.2187 195.308 14.28H196.748C196.908 14.8133 197.239 15.24 197.74 15.56C198.242 15.8907 198.844 16.056 199.548 16.056C200.348 16.056 200.999 15.8053 201.5 15.304C202.012 14.8027 202.268 14.0987 202.268 13.192V11.352C201.98 11.864 201.554 12.2907 200.988 12.632C200.423 12.9733 199.762 13.144 199.004 13.144C198.226 13.144 197.516 12.952 196.876 12.568C196.247 12.184 195.751 11.6453 195.388 10.952C195.026 10.2587 194.844 9.46933 194.844 8.584C194.844 7.688 195.026 6.904 195.388 6.232C195.751 5.54933 196.247 5.02133 196.876 4.648C197.516 4.27467 198.226 4.088 199.004 4.088ZM202.268 8.6C202.268 7.93867 202.135 7.36267 201.868 6.872C201.602 6.38133 201.239 6.008 200.78 5.752C200.332 5.48533 199.836 5.352 199.292 5.352C198.748 5.352 198.252 5.48 197.804 5.736C197.356 5.992 196.999 6.36533 196.732 6.856C196.466 7.34667 196.332 7.92267 196.332 8.584C196.332 9.256 196.466 9.84267 196.732 10.344C196.999 10.8347 197.356 11.2133 197.804 11.48C198.252 11.736 198.748 11.864 199.292 11.864C199.836 11.864 200.332 11.736 200.78 11.48C201.239 11.2133 201.602 10.8347 201.868 10.344C202.135 9.84267 202.268 9.26133 202.268 8.6ZM206.953 2.808C206.675 2.808 206.441 2.712 206.249 2.52C206.057 2.328 205.961 2.09333 205.961 1.816C205.961 1.53867 206.057 1.304 206.249 1.112C206.441 0.919999 206.675 0.823999 206.953 0.823999C207.219 0.823999 207.443 0.919999 207.625 1.112C207.817 1.304 207.913 1.53867 207.913 1.816C207.913 2.09333 207.817 2.328 207.625 2.52C207.443 2.712 207.219 2.808 206.953 2.808ZM207.657 4.232V13H206.201V4.232H207.657ZM214.41 4.072C215.477 4.072 216.341 4.39733 217.002 5.048C217.664 5.688 217.994 6.616 217.994 7.832V13H216.554V8.04C216.554 7.16533 216.336 6.49867 215.898 6.04C215.461 5.57067 214.864 5.336 214.106 5.336C213.338 5.336 212.725 5.576 212.266 6.056C211.818 6.536 211.594 7.23467 211.594 8.152V13H210.138V4.232H211.594V5.48C211.882 5.032 212.272 4.68533 212.762 4.44C213.264 4.19467 213.813 4.072 214.41 4.072ZM228.373 8.28C228.373 8.55733 228.357 8.85067 228.325 9.16H221.317C221.37 10.024 221.663 10.7013 222.197 11.192C222.741 11.672 223.397 11.912 224.165 11.912C224.794 11.912 225.317 11.768 225.733 11.48C226.159 11.1813 226.458 10.7867 226.629 10.296H228.197C227.962 11.1387 227.493 11.8267 226.789 12.36C226.085 12.8827 225.21 13.144 224.165 13.144C223.333 13.144 222.586 12.9573 221.925 12.584C221.274 12.2107 220.762 11.6827 220.389 11C220.015 10.3067 219.829 9.50667 219.829 8.6C219.829 7.69333 220.01 6.89867 220.373 6.216C220.735 5.53333 221.242 5.01067 221.893 4.648C222.554 4.27467 223.311 4.088 224.165 4.088C224.997 4.088 225.733 4.26933 226.373 4.632C227.013 4.99467 227.503 5.496 227.845 6.136C228.197 6.76533 228.373 7.48 228.373 8.28ZM226.869 7.976C226.869 7.42133 226.746 6.94667 226.501 6.552C226.255 6.14667 225.919 5.84267 225.493 5.64C225.077 5.42667 224.613 5.32 224.101 5.32C223.365 5.32 222.735 5.55467 222.213 6.024C221.701 6.49333 221.407 7.144 221.333 7.976H226.869ZM238.295 8.28C238.295 8.55733 238.279 8.85067 238.247 9.16H231.239C231.292 10.024 231.585 10.7013 232.119 11.192C232.663 11.672 233.319 11.912 234.087 11.912C234.716 11.912 235.239 11.768 235.655 11.48C236.081 11.1813 236.38 10.7867 236.551 10.296H238.119C237.884 11.1387 237.415 11.8267 236.711 12.36C236.007 12.8827 235.132 13.144 234.087 13.144C233.255 13.144 232.508 12.9573 231.847 12.584C231.196 12.2107 230.684 11.6827 230.311 11C229.937 10.3067 229.751 9.50667 229.751 8.6C229.751 7.69333 229.932 6.89867 230.295 6.216C230.657 5.53333 231.164 5.01067 231.815 4.648C232.476 4.27467 233.233 4.088 234.087 4.088C234.919 4.088 235.655 4.26933 236.295 4.632C236.935 4.99467 237.425 5.496 237.767 6.136C238.119 6.76533 238.295 7.48 238.295 8.28ZM236.791 7.976C236.791 7.42133 236.668 6.94667 236.423 6.552C236.177 6.14667 235.841 5.84267 235.415 5.64C234.999 5.42667 234.535 5.32 234.023 5.32C233.287 5.32 232.657 5.55467 232.135 6.024C231.623 6.49333 231.329 7.144 231.255 7.976H236.791ZM241.672 5.656C241.928 5.15467 242.291 4.76533 242.76 4.488C243.24 4.21067 243.822 4.072 244.504 4.072V5.576H244.12C242.488 5.576 241.672 6.46133 241.672 8.232V13H240.216V4.232H241.672V5.656ZM246.937 2.808C246.66 2.808 246.425 2.712 246.233 2.52C246.041 2.328 245.945 2.09333 245.945 1.816C245.945 1.53867 246.041 1.304 246.233 1.112C246.425 0.919999 246.66 0.823999 246.937 0.823999C247.204 0.823999 247.428 0.919999 247.609 1.112C247.801 1.304 247.897 1.53867 247.897 1.816C247.897 2.09333 247.801 2.328 247.609 2.52C247.428 2.712 247.204 2.808 246.937 2.808ZM247.641 4.232V13H246.185V4.232H247.641ZM254.395 4.072C255.461 4.072 256.325 4.39733 256.987 5.048C257.648 5.688 257.979 6.616 257.979 7.832V13H256.539V8.04C256.539 7.16533 256.32 6.49867 255.883 6.04C255.445 5.57067 254.848 5.336 254.091 5.336C253.323 5.336 252.709 5.576 252.251 6.056C251.803 6.536 251.579 7.23467 251.579 8.152V13H250.123V4.232H251.579V5.48C251.867 5.032 252.256 4.68533 252.747 4.44C253.248 4.19467 253.797 4.072 254.395 4.072ZM263.973 4.088C264.73 4.088 265.392 4.25333 265.957 4.584C266.533 4.91467 266.96 5.33067 267.237 5.832V4.232H268.709V13.192C268.709 13.992 268.538 14.7013 268.197 15.32C267.856 15.9493 267.365 16.44 266.725 16.792C266.096 17.144 265.36 17.32 264.517 17.32C263.365 17.32 262.405 17.048 261.637 16.504C260.869 15.96 260.416 15.2187 260.277 14.28H261.717C261.877 14.8133 262.208 15.24 262.709 15.56C263.21 15.8907 263.813 16.056 264.517 16.056C265.317 16.056 265.968 15.8053 266.469 15.304C266.981 14.8027 267.237 14.0987 267.237 13.192V11.352C266.949 11.864 266.522 12.2907 265.957 12.632C265.392 12.9733 264.73 13.144 263.973 13.144C263.194 13.144 262.485 12.952 261.845 12.568C261.216 12.184 260.72 11.6453 260.357 10.952C259.994 10.2587 259.813 9.46933 259.813 8.584C259.813 7.688 259.994 6.904 260.357 6.232C260.72 5.54933 261.216 5.02133 261.845 4.648C262.485 4.27467 263.194 4.088 263.973 4.088ZM267.237 8.6C267.237 7.93867 267.104 7.36267 266.837 6.872C266.57 6.38133 266.208 6.008 265.749 5.752C265.301 5.48533 264.805 5.352 264.261 5.352C263.717 5.352 263.221 5.48 262.773 5.736C262.325 5.992 261.968 6.36533 261.701 6.856C261.434 7.34667 261.301 7.92267 261.301 8.584C261.301 9.256 261.434 9.84267 261.701 10.344C261.968 10.8347 262.325 11.2133 262.773 11.48C263.221 11.736 263.717 11.864 264.261 11.864C264.805 11.864 265.301 11.736 265.749 11.48C266.208 11.2133 266.57 10.8347 266.837 10.344C267.104 9.84267 267.237 9.26133 267.237 8.6Z"
                      fill="#eeeeee"
                    />
                  </svg>
                </div>
              </section>
            </div>
          </div>

          <div
            style={{
              width: "100%",
              border: "solid 0.5px #aaaa",
            }}
          />
        </>
      )}
      {(menuIsOpen || expandNotification) && (
        <div
          className="clickElsewhereMain"
          onClick={() => {
            handleClick();
          }}
        />
      )}
    </div>
  );
}

export default NavBar;
